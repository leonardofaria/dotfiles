version: "3.7"
services:
  plextraktsync:
    image: ghcr.io/taxel/plextraktsync
    container_name: plextraktsync
    volumes:
      - ~/.dotfiles/plextraktsync:/app/config
    # Run docker-compose run --rm plextraktsync
    # to create the config needed and authorize Plex / Trakt

  ftpd-server:
    image: stilliard/pure-ftpd:hardened
    container_name: ftpd-server
    ports:
      - 21:21
      - 20:20
      - 30000-30009:30000-30009
    environment:
      # export LOCAL_IP=$(ipconfig getifaddr en0)
      # export FTP_USER="myuser"
      # export FTP_PASS="mypassword"
      PUBLICHOST: $LOCAL_IP
      FTP_USER_NAME: $FTP_USER
      FTP_USER_PASS: $FTP_PASS
      FTP_USER_HOME: /home/ftpuser
      ADDED_FLAGS: -d -d
    restart: on-failure
    volumes:
      - ~/ftp:/home/ftpuser

  surfshark:
    image: haugene/transmission-openvpn
    container_name: surfshark
    cap_add:
      - NET_ADMIN
    volumes:
      - "~/Downloads/torrents/:/data"
      - "~/Downloads/torrents/config/:/config"
    environment:
      OPENVPN_PROVIDER: SURFSHARK
      OPENVPN_CONFIG: br-sao.prod.surfshark.com_tcp
      OPENVPN_USERNAME: $SURFSHARK_USER
      OPENVPN_PASSWORD: $SURFSHARK_PASSWORD
      LOCAL_NETWORK: 192.168.0.0/16
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - 9091:9091
    restart: always

  service_test:
    image: byrnedo/alpine-curl
    container_name: alpine-curl
    # export IPINFO_TOKEN="ABCDEFGHIJKLM"
    command: -i -L 'https://ipinfo.io/?token=$IPINFO_TOKEN'
    depends_on:
      - surfshark
    network_mode: service:surfshark
    restart: always

  easydocker:
    image: qfdk/easydockerweb
    container_name: easydocker
    environment:
      EDW_USERNAME: $EASYDOCKERWEB_USER
      EDW_PASSWORD: $EASYDOCKERWEB_PASS
    ports:
      - 3000:3000
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
